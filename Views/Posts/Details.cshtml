@using Blogly.Services
@using Microsoft.AspNetCore.Identity
@using Blogly.Enums
@using Blogly.Models
@using Newtonsoft.Json

@model Blogly.Models.Post

@inject UserManager<BlogUser> userManager
@inject IImageService imageService

@{
    ViewData["Title"] = "Details";
}

<!-- Page content-->
<article>
    <!-- Post header-->
    <header class="mb-4 text-center">

        <!-- Post title-->
        <h1 class="fw-bolder mb-1">@Model.Title</h1>

        <!-- Post meta content-->
        <div class="text-muted fst-italic mb-2">Posted on @Model.Created.ToString("MMM dd, yyyy")</div

        <!-- Post tags -->
        @foreach (var tag in Model.Tags)
        {
        <a asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()" name="Tag" class="badge bg-secondary text-decoration-none link-light">@tag.Text</a>
        }
    </header>

    <hr />

    <!-- Post content-->
    <div class="mb-5">
        @Html.Raw(Model.Content)
    </div>
</article>


<hr />

<div class="mb-5">
    <div class="card shadow">
        <div class="card-body">
            @if (User.Identity.IsAuthenticated)
            {
                <!-- Comment form-->
                <form asp-action="Create" asp-controller="Comments" method="post" class="mb-4">
                    @Html.Hidden("PostId", Model.Id)
                    @Html.Hidden("Slug", Model.Slug)

                    <div class="form-group mb-3">
                        <label class="h2 custom-control-label font-weight-bold">Add Comment</label>
                        <textarea name="body" class="form-control" rows="3" placeholder="Join the discussion and leave a comment!"></textarea>
                    </div>
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-sm btn-dark">Submit</button>                    
                    </div>
                </form>
                <hr>
            }
            else
            {
                <a class="btn btn-dark d-grid gap-2 btn-sm" asp-area="identity" asp-page="/Account/Login">Login to add comments</a>
            }

            <span id="commentSection" class="btn btn-sm d-grid gap-2">@Model.Comments.Count Comment(s)</span>

            @{var counter = 0;}
            @foreach(var comment in Model.Comments)
            {
                <div class="d-flex align-items-center mb-4">
                    <div class="flex-shrink-0">
                        <img class="mr-3 mt-3 rounded-circle img-thumbnail " style="width:60px;" src="@imageService.DecodeImage(comment.BlogUser.ImageData, comment.BlogUser.ContentType)"alt="@comment.BlogUser.FullName" />
                    </div>
                    <div class=" flex-grow-1 ms-4 mt-3">
                        <div class="fw-bold">@comment.BlogUser.FullName</div>

                        @****************************************************************
                        SECTION 1: POST ON OR UPDATED ON               
                        *****************************************************************@
                        @if(comment.Deleted is not null)
                        {
                            <span class="small">                                                       
                                <span class="font-weight-bolder">Deleted</span> : @comment.Deleted?.ToString("MMM dd, yyyy")
                            </span>                    
                        }
                        else if(comment.Moderated is not null)
                        {
                            <span class="small">
                                <span class="font-weight-bolder">
                                    Moderated <span class="text-danger font-italic">(@comment.ModerationType.ToString().ToLower())</span>                   
                                </span>                       
                                : @comment.Moderated?.ToString("MMM dd, yyyy")                                                           
                            </span>                   
                            }
                        else if(comment.Updated is not null)
                        {
                            <span class="small">
                                <span class="font-weight-bolder">Updated </span> : @comment.Updated?.ToString("MMM dd, yyyy")
                            </span>        
                        }
                        else
                        {
                            <span class="small">
                                <span class="font-weight-bolder">Created </span> : @comment.Created.ToString("MMM dd, yyyy")
                            </span>                      
                        }    

                @*****************************************************************
                SECTION 2A: Render pre text                       
                *****************************************************************@                     
                <br />
                @if(comment.Deleted is not null)
                {
                    <span class="small font-italic">The comment posted on @comment.Created.ToString("MMM dd, yyyy") by @comment.BlogUser.FullName was deleted by the Moderator...</span>
                }
                else if(comment.Moderated is not null)
                {
                    <span class="small font-italic">The comment posted on @comment.Created.ToString("MMM dd, yyyy") by @comment.BlogUser.FullName has been Moderated...</span>                      
                }

                <hr />

                 @*****************************************************************
                SECTION 2B: Render main body                       
                *****************************************************************@                      
                @if(string.IsNullOrEmpty(comment.Body))
                {
                    <span class="small font-italic">Comment not available...</span>
                }
                else if(comment.Moderated is not null)
                {
                    @comment.ModeratedBody
                }
                else if(comment.Deleted is null)
                {
                    @comment.Body
                }
                    </div>

                 @*****************************************************************
                               SECTION 1: RENDER THE EDIT BUTTON
                 *****************************************************************@

                    <div class="ms-5">
                        @if(comment.Moderated is null && comment.Deleted is null && comment.BlogUserId == userManager.GetUserId(User))
                        {
                            <button data-bs-toggle="modal" data-bs-target="@($"#editModal{counter}")" class="btn btn-sm btn-dark font-weight-bold">EDIT</button>
                        }
                    </div>
                </div>

                @*****************************************************************
                        SECTION 2: RENDER THE MODERATE AND DELETE BUTTONS
                 *****************************************************************@

                @if(User.IsInRole(BlogRole.Moderator.ToString()) && comment.Deleted is null)
                {
                    <hr />
                    <div class="row">
                        <div class="d-grid col-6">
                            <button class="btn btn-sm btn-dark font-weight-bold" data-bs-toggle="modal" data-bs-target="@($"#moderateModal{counter}")">MODERATE</button>
                        </div>
                        <div class="col-6">
                            <form asp-action="Delete" asp-controller="Comments">
                                @Html.Hidden("Id", comment.Id)
                                @Html.Hidden("Slug", comment.Post.Slug)
                                <button class="btn btn-sm btn-dark font-weight-bold">DELETE</button>
                            </form>
                        </div>
                    </div>
                }

                <hr />

                    @***********************************
                                  MODALS
                    ************************************@

                        @*EDIT MODAL*@
                <div class="modal" id="@($"editModal{counter}")">
                    <div class="modal-dialog">
                        <div class="modal-content">

                            <!--Modal Header-->
                            <div class="modal-header">
                                <h4 class="modal-title">Editing Comment...</h4>
                            </div>

                            <!-- Modal Body -->
                            <div class="modal-body">
                                <form asp-action="Edit" asp-controller="Comments">
                                    @Html.Hidden("Id", comment.Id)

                                    <div class="form-group">
                                        <textarea name="Body" class="form-control" required>@comment.Body</textarea>
                                    </div>
                                    <button class="btn-sm btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                                </form>
                            </div>

                            <!-- Modal Footer -->
                            <div class="modal-footer">
                                <button type="button" class="btn-sm btn-dark font-weight-bold" data-bs-dismiss="modal">CLOSE</button>
                            </div>

                        </div>
                    </div>
                </div>

                       @*MODERATE MODAL*@
                <div class="modal" id="@($"moderateModal{counter}")">
                    <div class="modal-dialog">
                        <div class="modal-content">

                            <!--Modal Header-->
                            <div class="modal-header">
                                <h4 class="modal-title">Moderating Comment...</h4>
                            </div>

                            <!--Modal Body-->
                            <div class="modal-body">
                                <form asp-action="Moderate" asp-controller="Comments">
                                    @Html.Hidden("Id", comment.Id)
                                    @Html.Hidden("Body", comment.Body)

                                    <div class="form-group">
                                        <label class="control-label">Origional Comment</label>
                                        <textarea disabled class="form-control" style="resize:none">@comment.Body</textarea>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label">Moderated Comment</label>
                                        <textarea required name="ModeratedBody" class="form-control">@comment.ModeratedBody</textarea>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label">Reason for Moderation</label>
                                        <select class="form-control" asp-for="@comment.ModerationType" name="ModerationType" asp-items="Html.GetEnumSelectList<ModerationType>()"></select>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            <div class="d-grid gap-2 col">
                                                <button class="btn-sm btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                                            </div>

                                            <div class="d-grid gap-2 col">
                                                <button class="btn-sm btn-dark font-weight-bold" type="button" data-bs-dismiss="modal">CLOSE</button>
                                            </div>

                                        </div>
                                    </div>

                                </form>

                            </div>
                        </div>
                    </div>
                </div>

                counter++;
            }
        </div>
    </div>
</div>

