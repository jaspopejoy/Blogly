@using Blogly.Models
@using Blogly.Services
@using Blogly.Enums
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using Microsoft.AspNetCore.Identity

@model IPagedList<Blog>

@inject IImageService _imageService
@inject UserManager<BlogUser> _userManager

@{
    ViewData["Title"] = "Home Page";
}

<style>
    .clampoverview {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .ClampTitle {
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    h5.card-title {
        height: 2.5rem;
    }
</style>

<!-- Page content-->
<!-- Nested row for non-featured blog posts-->
<div class="row">
    <!-- Blog post-->
    @foreach (var blog in Model)
    {
        <div class="col-md-6 mt-2 d-flex">
            <div class="card mb-4">
                <img class="card-img-top"
                     src="@_imageService.DecodeImage(blog.ImageData, blog.ContentType)" alt="..." />
                <div class="card-body d-grid gap-1 text-center">
                    <div class="small text-muted"><strong>Created</strong>: @blog.Created.ToString("MMM dd, yyyy")</div>
                    <h2 class="card-title h4 clamptitle">@blog.Name</h2>
                    <p class="card-text clampoverview"> @blog.Description </p>
                        <a class="btn btn-dark" asp-action="BlogPostIndex" asp-controller="Posts" asp-route-id="@blog.Id">Read Posts</a>
                        @if (User.IsInRole(BlogRole.Administrator.ToString()))
                        {
                            <a class="btn btn-dark" asp-action="Create" asp-controller="Posts" asp-route-id="@blog.Id">Create Post</a>
                            <a class="btn btn-dark" asp-action="Edit" asp-controller="Blogs" asp-route-id="@blog.Id">Edit Blog</a>
                            <a class="btn btn-dark" asp-action="Delete" asp-controller="Blogs" asp-route-id="@blog.Id">Delete Blog</a>

                        }
                </div>
            </div>
        </div>
    }
</div>

<!--Paging Controls-->
<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>

<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("Index", new{page = page}),
        new PagedListRenderOptions
        {
        LiElementClasses = new string[] {"page-item"},
        PageClasses = new string[]{"page-link"}
        })
    </div>
</div>

@section Scripts {
    <script>
        var swalMsg = '@TempData["SweetAlert"]'
        if(swalMsg != ""){
            Swal.fire({
                icon: 'success',
                title: swalMsg,
                timer: 2500
            })
        }

        $(document).ready(function(){
            $("p").tooltip();
        });

    </script>
}